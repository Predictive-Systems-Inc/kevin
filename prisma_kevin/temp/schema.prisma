
// Define the datasource db
datasource db {
  provider = "postgresql" // or your database provider
  url      = env("DATABASE_URL")
}

// Define the generator client
generator client {
  provider = "prisma-client-js"
}

// Define the Case model
model Case {
  id            String         @id @default(cuid()) // Unique identifier for each case
  name          String
  parties       Party[]        // One-to-many relation to the Party model
  documents     Document[]     // One-to-many relation to the Document model
  actions       Action[]       // One-to-many relation to the Action model
  timespents    TimeSpent[]    // One-to-many relation to the TimeSpent model
  reimbursements Reimbursement[] // One-to-many relation to the Reimbursement model
  createdAt     DateTime       @default(now())      // Timestamp of case creation
  updatedAt     DateTime       @updatedAt          // Timestamp of the last update
  deletedAt     DateTime?                           // Optional timestamp of deletion
}

// Define the Party model
model Party {
  id          String   @id @default(cuid()) // Unique identifier for each party
  name        String
  caseId      String  // Foreign key referencing the Case model
  case        Case     @relation(fields: [caseId], references: [id]) // Relation to the Case model
  createdAt   DateTime @default(now()) // Timestamp of party creation
  updatedAt   DateTime @updatedAt // Timestamp of the last update
  deletedAt   DateTime? // Optional timestamp of deletion
  
  // Index on caseId to optimize queries involving the case field
  @@index([caseId])
}

// Define the Document model
model Document {
  id          String   @id @default(cuid()) // Unique identifier for each document
  title       String
  content     String?
  caseId      String  // Foreign key referencing the Case model
  case        Case     @relation(fields: [caseId], references: [id]) // Relation to the Case model
  createdAt   DateTime @default(now()) // Timestamp of document creation
  updatedAt   DateTime @updatedAt // Timestamp of the last update
  deletedAt   DateTime? // Optional timestamp of deletion
  
  // Index on caseId to optimize queries involving the case field
  @@index([caseId])
}

// Define the Action model
model Action {
  id          String   @id @default(cuid()) // Unique identifier for each action
  description String
  caseId      String  // Foreign key referencing the Case model
  case        Case     @relation(fields: [caseId], references: [id]) // Relation to the Case model
  createdAt   DateTime @default(now()) // Timestamp of action creation
  updatedAt   DateTime @updatedAt // Timestamp of the last update
  deletedAt   DateTime? // Optional timestamp of deletion
  
  // Index on caseId to optimize queries involving the case field
  @@index([caseId])
}

// Define the TimeSpent model
model TimeSpent {
  id          String   @id @default(cuid()) // Unique identifier for each time spent entry
  duration    Int      // Duration in minutes
  caseId      String  // Foreign key referencing the Case model
  case        Case     @relation(fields: [caseId], references: [id]) // Relation to the Case model
  createdAt   DateTime @default(now()) // Timestamp of time spent entry creation
  updatedAt   DateTime @updatedAt // Timestamp of the last update
  deletedAt   DateTime? // Optional timestamp of deletion
  
  // Index on caseId to optimize queries involving the case field
  @@index([caseId])
}

// Define the Reimbursement model
model Reimbursement {
  id          String   @id @default(cuid()) // Unique identifier for each reimbursement
  amount      Float
  caseId      String  // Foreign key referencing the Case model
  case        Case     @relation(fields: [caseId], references: [id]) // Relation to the Case model
  createdAt   DateTime @default(now()) // Timestamp of reimbursement creation
  updatedAt   DateTime @updatedAt // Timestamp of the last update
  deletedAt   DateTime? // Optional timestamp of deletion
  
  // Index on caseId to optimize queries involving the case field
  @@index([caseId])
}
